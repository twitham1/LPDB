#!/usr/bin/perl

use strict;
use warnings;
use FindBin q($Bin);
use lib "$Bin/../lib";
use Prima 1.67 qw(Buttons Label Edit Application);
use Data::Dumper;

# Maybe promote to Prima::Fullscreen or even merge into Window:
use Prima::LPDB::Fullscreen;

my $menu = [[ "~Left Menu" => [
		  [ "~Exit" => sub { $::application -> destroy } ]
	      ]],
	    [],
	    ["~Right Menu" => [
		 [ "~Exit" => sub { $::application -> destroy } ]
	     ]]];

# a Window that can go ->fullscreen(1) or not(0) or toggle(-1)
my $w = Prima::LPDB::Fullscreen-> create(
    mainWindow => 1,  # promote myself to MainWindow per Prima::Window:
    onDestroy  => sub { $::application-> close },
    text => "Fullscreen Tests",
    size => [ 1350, 850],
    centered => 1,
    designScale => [16, 32],
    onSize => \&showlocation,
    onMove => \&showlocation,
    onWindowState => \&showlocation,
    );
my $t = $w->insert( Label =>
		    text => '',
		    pack => { qw/fill x anchor n/ });
$t-> insert( Button =>
	     text => "Mi~nimize",
	     onClick => sub { $w->minimize },
	     pack => { qw/side left/ }
    );
$t-> insert( Button =>
	     text => "~Restore",
	     hint => 'fullscreen(0)',
	     onClick => sub {
		 $w->fullscreen(0);
		 $w->restore;
	     },
	     pack => { qw/side left/ }
    );
$t-> insert( Button =>
	     text => "Ma~ximize",
	     onClick => sub { $w->maximize },
	     pack => { qw/side left/ }
    );
$t-> insert( Button =>
	     text => "~Quit",
	     onClick => sub { $::application->destroy },
	     pack => { qw/side right/ }
    );
$t-> insert( Button =>
	     text => "~Fullscreen",
	     hint => 'fullscreen(1)',
	     onClick => sub { $w->fullscreen(1) },
	     pack => { qw/side right/ }
    );
$t-> insert( Button =>
	     text => "~Toggle FS",
	     hint => 'fullscreen(-1)',
	     onClick => sub { $w->fullscreen(-1) },
	     pack => { qw/side right/ }
    );
my $text = $w-> insert( Edit =>
			font => { name => 'Courier' },
			readOnly => 1,
			pack => { qw/expand 1 fill both/ }
    );

# maybe Fullscreen's init should set known defaults like this?
my $unix = $::application-> get_system_info->{apc} == apc::Unix ? 1 : 0;
$w->{addY1} = $unix;

my $b = $w->insert( Label =>
		    text => '',
		    pack => { qw/fill x anchor s/ });
$b->insert(qw/Button text Hacks: hint/ =>
	   'my 0,0 origin is here, relative to primary screen',
	   pack => { qw/side left/ },
    );
$b->insert( CheckBox =>
	    text => 'Y+1',
	    hint => 'needed for XFCE?',
	    checked => $w->{addY1},
	    onCheck => sub { $w->{addY1} = $_[1] },
	    pack => { qw/side left/ },
    );
$b->insert( CheckBox =>
	    text => 'No Icons',
	    checked => $w->{NoIcons},
	    onCheck => sub { $w->{NoIcons} = $_[1] },
	    pack => { qw/side left/ },
    );
$b->insert( CheckBox =>
	    text => 'No Border',
	    checked => $w->{NoBorder},
	    onCheck => sub { $w->{NoBorder} = $_[1] },
	    pack => { qw/side left/ },
    );
$b->insert(qw/Button text Lower-Right/)->pack(qw/side right/);
$b->insert( CheckBox =>
	    text => 'Menu ~Bar',
	    onCheck => sub {
		$_[1] ? $w->menuItems($menu) :  $w->menu->selected(0);
		if ($w->fullscreen) {
		    $w->fullscreen(0);
		    $w->fullscreen(1);
		}
		&showlocation;
	    },
	    pack => { qw/side right/ },
    );

sub showlocation {
    $w or return;
    my $txt = sprintf "
\tMOVE ME to other screens, hit T !!!

\t::application->size: %5d x %5d
%5d, %5d (%5d x %5d) - window
%5d, %5d (%5d x %5d) - frame

\twindowstate: %d, fullscreen: %d

    X     Y     W     H   get_monitor_rects
",
	$::application->size,
	$w->origin, $w->size,
	$w->frameOrigin, $w->frameSize,
    	$w->windowState, $w->fullscreen;
    for my $aref (@{$::application->get_monitor_rects}) {
	$txt .= join(' ', map { sprintf '%5d', $_ } @$aref) . "\n"
    }
    $txt .= "
    X     Y     W     H  DIST    ON virtual_screens\n";
    for my $aref (@{$w->virtual_screens}) {
	$txt .= join(' ', map { sprintf '%5d', $_ } @$aref) . "\n"
    }
    $text->text($txt);
}
&showlocation;
print Dumper $::application->get_system_info;

run Prima;

exit 0;
