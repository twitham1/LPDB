#!/usr/bin/perl

=pod

=head1 NAME

lpgallery - remote-control (keyboard) driven local picture browser

=head1 FEATURES

UNDER CONSTRUCTION - for getting Prima LPDB browser up and running,
similar to picasagallery or mythgallery, like for mythtv

=cut

# by twitham@sbcglobal.net in 2020 based on picasagallery of 2013

# TODO: navigation object needed, sortable by basename or average
# time, via a database view over all files and virtual dirs:

# basename, displayed for dirs
# count, displayed for dirs (changes by filtering)
# average time of all photos (could change by filtering?)
# caption, optionally displayed for files (Picasa description for dirs)
# parent node, / for root [dirs]

# now all navigation/sorting is available from DB queries: start with
# all nodes that have / parent, drill down from there.  GUI can
# concatenate the full path to node and know all siblings.

use strict;
use warnings;
use Prima;
use Prima::Application name => "LPGallery";
use Prima::Image::Magick qw/:all/;
use LPDB;
use Prima::LPDB::ThumbViewer;

my $dbfile    = '.lpdb.db';
my $thumbfile = '.lpdb-thumb.db';
my $create = -f $dbfile && -s _ ? 0 : 1;
my $lpdb;			# LPDB object, a local picture database

my $child;
if ($child = fork) {		# GUI starts after child is updating DB
    warn "$0: $$ forked $child to update $dbfile\n";
    sleep 5 if $create;
    $lpdb = new LPDB({dbfile => $dbfile,
		      thumbfile => $thumbfile,
		      #		     sqltrace => 1,
		     });
} else {			# child updates DB, creating if needed
    unlink $dbfile if $create and ! -s $dbfile;
    $lpdb = new LPDB({dbfile => $dbfile,
    		      thumbfile => $thumbfile,
    		      #		     sqltrace => 1,
    		     });
    $lpdb->create if $create;
    $lpdb->update('.');
    warn "$0: $$ done updating $dbfile\n";
    exit;
}
END {
    kill 'TERM', $child if $child;
}

my $lv;				# ListViewer
my $iv;				# ImageViewer
my $w = Prima::MainWindow->create(
    # background => 'black',	# how to default these?
    # foreground => 'white',
    text => 'Local Picture Gallery',
    packPropagate => 0,
    frameSize => [1920, 1080],	# dont' seem to work?
    frameWidth => 1600,
    frameHeight => 900,
    menuItems => [
    	['~Options' => [
    	     ['bigger', 'Zoom ~In', '=', ord '=' => sub { $lv->bigger } ],
    	     ['smaller', 'Zoom ~Out', '-', ord '-' => sub { $lv->smaller } ],
    	     ['crops', '~Crop', 'c', ord 'c' => sub {
    		 $lv->{crops} = $_[0]->menu->toggle($_[1]);
    		 $lv->repaint;
    	      } ],
    	     ['quit', '~Quit', 'Ctrl+Q', '^q' => sub { $::application->close } ],
    	 ]
    	]],
    );
$w->font->name('bitstream charter'); # hack!!!! how to find best font?
$w->font->height(28);
#$w->font->style(fs::Italic);

#print sort map {"$_->{name}\n"} @{$::application-> fonts}; # see available fonts!!!

$lv = $w->insert(
    'Prima::LPDB::ThumbViewer',
    lpdb => $lpdb,		# LPDB connection required in advance
    onKeyDown => sub {
#	warn "@_\n";
    	# if ($_[2] == ord 'm') {
    	#     $w->popup;
    	# }
    },
    onClick => sub {
	print $_[0]-> focusedItem, " is clicked\n";
    },
    pack => { expand => 1, fill => 'both' },
    );

$w->maximize;

# warn " brief keys ", $lv->briefKeys;
# $lv->briefKeys(0);

# $lv->focusedItem(0);
# $lv->reset;
$lv->smaller;			# resize thumbs to fill the window

run Prima;

exit 0;

=pod

=back

=head1 TODO

Add documenation from picasagallery here!!!

=head1 SEE ALSO
L<LPDB>, L<picasagallery>, L<Prima>

=head1 AUTHOR

Timothy D Witham <twitham@sbcglobal.net>

=head1 COPYRIGHT AND LICENSE

Copyright 2013-2022 Timothy D Witham.

This program is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.

=cut
