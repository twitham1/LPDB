=pod

=head1 NAME

lpgallery - remote-control (keyboard) driven local picture browser

=head1 FEATURES

UNDER CONSTRUCTION - for getting Prima LPDB browser up and running,
similar to picasagallery or mythgallery, like for mythtv

=cut

# by twitham@sbcglobal.net in 2020 based on picasagallery of 2013

use strict;
use warnings;
use Prima qw(Application);
use LPDB::Prima::ListViewer;

my $l;				# ListViewer
my $w = Prima::MainWindow->create(
    text => 'Local Picture Gallery',
    packPropagate => 0,
    menuItems => [
	['~Options' => [
	     ['*dg', 'Draw Grid' => sub { $l-> drawGrid( $_[0]-> menu-> toggle( $_[1])) }],
	     ['bigger', 'Zoom ~In', '=', ord '=' => sub { $l-> bigger } ],
	     ['smaller', 'Zoom ~Out', '-', ord '-' => sub { $l-> smaller } ],
	     ['rand', '~Random Items' => sub {
		 $l->items([ 0 .. rand 1000]);
		 $l->focusedItem(0);
		 $l->reset;
	      } ],
	     ['quit', '~Quit', 'Ctrl+Q', '^q' => sub { $::application->close } ],
	 ]
	]],
    );
$w->font->name('bitstream charter'); # hack!!!! how to find best font?
#$w->font->height(20);
#$w->font->style(fs::Italic);

#print sort map {"$_->{name}\n"} @{$::application-> fonts}; # see available fonts!!!

my $im = Prima::Image->new;
$im->load('thumb.jpg');		# hack!!! TODO: read each tile from DB

# $w->insert(ImageViewer => size => [ $w->size ],
# 	   image => $im, zoom => 3);
# run Prima;

sub scale { # return maximum x, y, offsets of im, retaining aspect ratio
    my($im, $x, $y) = @_;
    my($w, $h) = ($im->width, $im->height);
    my $src = $w / $h;		# aspect ratios
    my $dst = $x / $y;
    if ($src > $dst) {		# image wider than cell
	my $h = $x / $src;
	return $x, $h, 0, int(($y - $h) / 2);
    } else {			# image taller than cell
	my $w = $y * $src;
	return $w, $y, int(($x - $w) / 2), 0;
    }
}

$l = $w->insert(
    'LPDB::Prima::ListViewer',
    itemWidth => 270,		# 4:3, should it be configurable?
    itemHeight => 200,
    onDrawItem => sub {
    	my ( $self, $canvas, $idx, $x1, $y1, $x2, $y2, $sel, $foc, $pre, $col) = @_;

    	my $bk = $sel ? $self-> hiliteBackColor : cl::Back;
    	$bk = $self-> prelight_color($bk) if $pre;
    	$canvas-> backColor( $bk );
    	$canvas-> clear( $x1, $y1, $x2, $y2);
	$canvas-> color( $sel ? $self-> hiliteColor : cl::Fore);
    	my($x, $y, $xoff, $yoff) = &scale($im, $x2 - $x1 - 20, $y2 - $y1 - 20);
    	$canvas->put_image_indirect($im, $x1 + 10 + $xoff,
    				    $y2 - $y - 10 - $yoff, 0, 0, $x, $y,
    				    $im->width, $im->height, $self->rop)
    	    or warn "put_image failed: $@\n";
    	$canvas-> text_out( $idx, $x1 + 10, $y1 + 10);
    	$canvas-> text_out( "hello world", $x1+10, ($y1+$y2)/2);
    	$canvas-> rect_focus( $x1, $y1, $x2, $y2 ) if $foc;
    },
    # onKeyDown => sub {
    # 	if ($_[2] == ord 'm') {
    # 	    $w->popup;
    # 	}
    # },
    onClick => sub {
	print $_[0]-> focusedItem, " is clicked\n";
    },
    pack => { expand => 1, fill => 'both' },
    );

$l->items([ 0 .. rand 1000]);
$l->focusedItem(0);
$l->reset;

run Prima;

exit 0;

=pod

=back

=head1 TODO

Add documenation from picasagallery here!!!

=head1 SEE ALSO
L<LPDB>, L<picasagallery>, L<Prima>

=head1 AUTHOR

Timothy D Witham <twitham@sbcglobal.net>

=head1 COPYRIGHT AND LICENSE

Copyright 2013-2020 Timothy D Witham.

This program is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.

=cut
